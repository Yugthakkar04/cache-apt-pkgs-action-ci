name: $branch_upper$ Tests
on:
  workflow_dispatch:
  repository_dispatch:
    types: [$event_type$]
  push:

jobs:
  list_versions:
    runs-on: ubuntu-latest
    name: List package versions.
    steps:
      - uses: actions/checkout@v2
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot rolldice
          version: ${{ github.run_id }}-${{ github.run_attempt }}-list-package-versions
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'false' || steps.cache-apt-pkgs.outputs.package-version-list != 'xdot:1.1-2,rolldice:1.16-1build1'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}" 
          echo "package-version-list = ${{ steps.cache-apt-pkgs.outputs.package-version-list }}"
          exit 1
        shell: bash

  install:
    runs-on: ubuntu-latest
    name: Install package and cache.
    steps:
      - uses: actions/checkout@v2
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot rolldice
          version: ${{ github.run_id }}-${{ github.run_attempt }}
      - id: check-additional-pkg-dir
        run: |
          # xdot requires python3-numpy so check that it was installed
          echo "::set-output name=numpy-exists::$([ -d "/usr/lib/python3/dist-packages/numpy" ] && echo "true" || echo "false")"
          echo "::set-output name=cached-pkgs::$(ls -1 ${cache_dir}/*.tar.gz | sort)"
          echo "::set-output name=cached-pkg-count::$(ls -1 ${cache_dir}/*.tar.gz | wc -w)"
        shell: bash
      - id: check-cache-hash
        run: |
          # Generate and check the hash key and compare it against the one provided
          value="rolldice=1.16-1build1 xdot=1.1-2 @ ${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}"
          key=$(echo "${value}" | md5sum | /bin/cut -f1 -d' ')
          echo "::set-output name=calculated-cache-key::${key}"
          echo "::set-output name=cache-key-matches::$([ "${key}" == "${{ steps.cache-apt-pkgs.outputs.cache-key }}" ] && echo "true" || echo "false")"
        shell: bash
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'false' || steps.check-additional-pkg-dir.outputs.numpy-exists == 'false' || steps.check-cache-hash.outputs.cache-key-matches == 'false'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}"
          echo "cached-pkg-count = ${{ steps.check-additional-pkg-dir.outputs.cached-pkg-count }}"
          echo "cached-pkgs = ${{ steps.check-additional-pkg-dir.outputs.cached-pkgs }}"
          echo "calculated-cache-key = ${{ steps.check-cache-hash.outputs.calculated-cache-key }}"
          echo "cache-key = ${{ steps.cache-apt-pkgs.outputs.cache-key }}"
          exit 1
        shell: bash

  intall_with_new_version:
    runs-on: ubuntu-latest
    name: Install packages with new version.
    steps:
      - uses: actions/checkout@v2
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot rolldice
          version: ${{ github.run_id }}-${{ github.run_attempt }}-new_version
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'false'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}"
          exit 1
        shell: bash

  intall_with_new_version_refresh:
    needs: intall_with_new_version
    runs-on: ubuntu-latest
    name: Refresh installed and cached packages.
    steps:
      - uses: actions/checkout@v2
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot rolldice
          version: ${{ github.run_id }}-${{ github.run_attempt }}-new_version
          refresh: true
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'true'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}"
          exit 1
        shell: bash

  restore:
    needs: install
    runs-on: ubuntu-latest
    name: Restore cached packages.
    steps:
      - uses: actions/checkout@v2
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot rolldice
          version: ${{ github.run_id }}-${{ github.run_attempt }}
      - id: check-additional-pkg-dir
        run: |
          # xdot requires python3-numpy so check that it was restored
          echo "::set-output name=numpy-exists::$([ -d "/usr/lib/python3/dist-packages/numpy" ] && echo "true" || echo "false")"
          echo "::set-output name=cached-pkgs::$(ls -1 ${cache_dir}/*.tar.gz | sort)"
          echo "::set-output name=cached-pkg-count::$(ls -1 ${cache_dir}/*.tar.gz | wc -w)"
        shell: bash
      - id: check-cache-hash
        run: |
          # Generate and check the hash key and compare it against the one provided
          value="rolldice=1.16-1build1 xdot=1.1-2 @ ${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}"
          key=$(echo "${value}" | md5sum | /bin/cut -f1 -d' ')
          echo "::set-output name=calculated-cache-key::${key}"
          echo "::set-output name=cache-key-matches::$([ "${key}" == "${{ steps.cache-apt-pkgs.outputs.cache-key }}" ] && echo "true" || echo "false")"
        shell: bash
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'true'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}"
          echo "cached-pkg-count = ${{ steps.check-additional-pkg-dir.outputs.cached-pkg-count }}"
          echo "cached-pkgs = ${{ steps.check-additional-pkg-dir.outputs.cached-pkgs }}"
          echo "calculated-cache-key = ${{ steps.check-cache-hash.outputs.calculated-cache-key }}"
          echo "cache-key = ${{ steps.cache-apt-pkgs.outputs.cache-key }}"
          exit 1
        shell: bash

  restore_with_packages_out_of_order:
    needs: install
    runs-on: ubuntu-latest
    name: Restore with packages out of order.
    steps:
      - uses: actions/checkout@v2
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: rolldice xdot
          version: ${{ github.run_id }}-${{ github.run_attempt }}
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'true'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}"
          exit 1
        shell: bash

  add_package:
    needs: install
    runs-on: ubuntu-latest
    name: Add another package.
    steps:
      - uses: actions/checkout@v2
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot rolldice distro-info-data
          version: ${{ github.run_id }}-${{ github.run_attempt }}
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'false'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}"
          exit 1
        shell: bash

  restore_add_package:
    needs: add_package
    runs-on: ubuntu-latest
    name: Restore added package.
    steps:
      - uses: actions/checkout@v2
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot rolldice distro-info-data
          version: ${{ github.run_id }}-${{ github.run_attempt }}
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'true'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}"
          exit 1
        shell: bash

  no_packages:
    runs-on: ubuntu-latest
    name: No packages passed.
    steps:
      - name: Execute
        id: execute
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: ""
        continue-on-error: true
      - name: Verify
        if: steps.execute.outcome == 'failure'
        run: exit 0
        shell: bash

  package_not_found:
    runs-on: ubuntu-latest
    name: Package not found.
    steps:
      - name: Execute
        id: execute
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: package_that_doesnt_exist
        continue-on-error: true
      - name: Verify
        if: steps.execute.outcome == 'failure'
        run: exit 0
        shell: bash

  version_contains_spaces:
    runs-on: ubuntu-latest
    name: Version contains spaces.
    steps:
      - name: Execute
        id: execute
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot
          version: 123 abc
        continue-on-error: true
      - name: Verify
        if: steps.execute.outcome == 'failure'
        run: exit 0
        shell: bash