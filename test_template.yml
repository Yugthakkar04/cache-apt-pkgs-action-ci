name: $branch_upper$ Tests
on:
  workflow_dispatch:
  repository_dispatch:
    types: [$event_type$]
  push:

jobs:
  list_all_versions:
    runs-on: ubuntu-latest
    name: List all package versions (including deps).
    steps:
      - uses: actions/checkout@v3.1.0
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot
          version: ${{ github.run_id }}-${{ github.run_attempt }}-list-all-package-versions
          debug: true
      - name: Verify      
        if: |
          steps.cache-apt-pkgs.outputs.cache-hit != 'false' || 
          steps.cache-apt-pkgs.outputs.all-package-version-list != 'gir1.2-atk-1.0:2.36.0-3build1,gir1.2-gtk-3.0:3.24.33-1ubuntu2,gir1.2-harfbuzz-0.0:2.7.4-1ubuntu3.1,gir1.2-pango-1.0:1.50.6+ds-2,graphviz:2.42.2-6,libann0:1.1.2+doc-7build1,libcdt5:2.42.2-6,libcgraph6:2.42.2-6,libgts-0.7-5:0.7.6+darcs121130-5,libgts-bin:0.7.6+darcs121130-5,libgvc6:2.42.2-6,libgvpr2:2.42.2-6,liblab-gamut1:2.42.2-6,libpangoxft-1.0-0:1.50.6+ds-2,libpathplan4:2.42.2-6,python3-cairo:1.20.1-3build1,python3-gi-cairo:3.42.1-0ubuntu1,python3-numpy:1:1.21.5-1build2,xdot:1.2-2'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}"
          echo "package-version-list = ${{ steps.cache-apt-pkgs.outputs.package-version-list }}"
          echo "all-package-version-list = ${{ steps.cache-apt-pkgs.outputs.all-package-version-list }}"
          exit 1
        shell: bash

  list_versions:
    runs-on: ubuntu-latest
    name: List package versions.
    steps:
      - uses: actions/checkout@v3.1.0
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot rolldice
          version: ${{ github.run_id }}-${{ github.run_attempt }}-list-package-versions
          debug: true
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'false' || steps.cache-apt-pkgs.outputs.package-version-list != 'rolldice:1.16-1build1,xdot:1.2-2'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}" 
          echo "package-version-list = ${{ steps.cache-apt-pkgs.outputs.package-version-list }}"
          exit 1
        shell: bash

  install:
    runs-on: ubuntu-latest
    name: Install package and cache.
    steps:
      - uses: actions/checkout@v3.1.0
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot rolldice
          version: ${{ github.run_id }}-${{ github.run_attempt }}
          debug: true
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'false'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}"
          exit 1
        shell: bash 

  install_with_new_version:
    needs: install
    runs-on: ubuntu-latest
    name: Install packages with new version.
    steps:
      - uses: actions/checkout@v3.1.0
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot rolldice
          version: ${{ github.run_id }}-${{ github.run_attempt }}-new_version
          debug: true
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'false'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}"
          exit 1
        shell: bash

  install_with_new_version_refresh:
    needs: install_with_new_version
    runs-on: ubuntu-latest
    name: Refresh installed and cached packages.
    steps:
      - uses: actions/checkout@v3.1.0
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot rolldice
          version: ${{ github.run_id }}-${{ github.run_attempt }}-new_version
          debug: true
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'true'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}"
          exit 1
        shell: bash

  restore:
    needs: install
    runs-on: ubuntu-latest
    name: Restore cached packages.
    steps:
      - uses: actions/checkout@v3.1.0
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot rolldice
          version: ${{ github.run_id }}-${{ github.run_attempt }}
          debug: true
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'true'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}"
          exit 1
        shell: bash

  restore_with_packages_out_of_order:
    needs: install
    runs-on: ubuntu-latest
    name: Restore with packages out of order.
    steps:
      - uses: actions/checkout@v3.1.0
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: rolldice xdot
          version: ${{ github.run_id }}-${{ github.run_attempt }}
          debug: true
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'true'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}"
          exit 1
        shell: bash

  add_package:
    needs: install
    runs-on: ubuntu-latest
    name: Add another package.
    steps:
      - uses: actions/checkout@v3.1.0
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot rolldice distro-info-data
          version: ${{ github.run_id }}-${{ github.run_attempt }}
          debug: true
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'false'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}"
          exit 1
        shell: bash

  restore_add_package:
    needs: add_package
    runs-on: ubuntu-latest
    name: Restore added package.
    steps:
      - uses: actions/checkout@v3.1.0
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot rolldice distro-info-data
          version: ${{ github.run_id }}-${{ github.run_attempt }}
          debug: true
      - name: Verify
        if: steps.cache-apt-pkgs.outputs.cache-hit != 'true'
        run: |
          echo "cache-hit = ${{ steps.cache-apt-pkgs.outputs.cache-hit }}"
          exit 1
        shell: bash

  no_packages:
    runs-on: ubuntu-latest
    name: No packages passed.
    steps:
      - name: Execute
        id: execute
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: ""
        continue-on-error: true
      - name: Verify
        if: steps.execute.outcome == 'failure'
        run: exit 0
        shell: bash

  package_not_found:
    runs-on: ubuntu-latest
    name: Package not found.
    steps:
      - name: Execute
        id: execute
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: package_that_doesnt_exist
        continue-on-error: true
      - name: Verify
        if: steps.execute.outcome == 'failure'
        run: exit 0
        shell: bash

  version_contains_spaces:
    runs-on: ubuntu-latest
    name: Version contains spaces.
    steps:
      - name: Execute
        id: execute
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: xdot
          version: 123 abc
          debug: true
        continue-on-error: true
      - name: Verify
        if: steps.execute.outcome == 'failure'
        run: exit 0
        shell: bash

  regression_36:
    runs-on: ubuntu-latest
    name: "Reinstall existing package (regression issue #36)."
    steps:
      - uses: actions/checkout@v3.1.0
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: libgtk-3-dev
          version: ${{ github.run_id }}-${{ github.run_attempt }}-regression_36
          debug: true

  regression_37:
    runs-on: ubuntu-latest
    name: "Install with reported package dependencies not installed (regression issue #37)."
    steps:
      - uses: actions/checkout@v3.1.0
      - id: cache-apt-pkgs
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: libosmesa6-dev libgl1-mesa-dev python3-tk pandoc git-restore-mtime
          version: ${{ github.run_id }}-${{ github.run_attempt }}-regression_37
          debug: true

  regression_44_install_and_cache:
    runs-on: ubuntu-latest
    name: "QEMU packages for specific arch (regression issue #44). Cache packages."
    steps:
      - uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: qemu-system-arm qemu-efi qemu-user-static binfmt-support
          version: ${{ github.run_id }}-${{ github.run_attempt }}-regression_44
          execute_install_scripts: true
          debug: true
      - name: Confirm pre-existing correct behavior.
        run: podman run --rm -it docker.io/arm64v8/alpine:3.14 uname -m
        shell: bash

  regression_44_restore_and_verify:
    runs-on: ubuntu-latest
    needs: regression_44_install_and_cache
    name: "QEMU packages for specific arch (regression issue #44). Restore packages and verify."
    steps:
      - name: Restore
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: qemu-system-arm qemu-efi qemu-user-static binfmt-support
          version: ${{ github.run_id }}-${{ github.run_attempt }}-regression_44
          execute_install_scripts: true
          debug: true
      - name: Verify
        run: podman run --rm -it docker.io/arm64v8/alpine:3.14 uname -m
        shell: bash

  regression_57_install_and_cache:
    runs-on: ubuntu-latest
    name: "LaTeX PDF generation (regression issue #57). Cache packages."
    steps:
      - uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: texlive-latex-base
          version: ${{ github.run_id }}-${{ github.run_attempt }}-regression_44
          execute_install_scripts: true
          debug: true
      - name: Confirm pre-existing correct behavior.
        run: echo "\documentclass{article} \begin{document} Hello world!! \end{document}" | pdflatex
        shell: bash

  regression_57_restore_and_verify:
    runs-on: ubuntu-latest
    needs: regression_57_install_and_cache
    name: "LaTeX PDF generation (regression issue #57). Restore packages and verify."
    steps:
      - name: Restore
        uses: awalsh128/cache-apt-pkgs-action@$branch$
        with:
          packages: texlive-latex-base
          version: ${{ github.run_id }}-${{ github.run_attempt }}-regression_44
          execute_install_scripts: true
          debug: true
      - name: Verify
        run: echo "\documentclass{article} \begin{document} Hello world!! \end{document}" | pdflatex
        shell: bash
